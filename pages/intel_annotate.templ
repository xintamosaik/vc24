package pages


type Annotation struct {
    Keyword string 
    Description string
    Start int
    End int 
    Content string
}

templ IntelAnnotate(content []string, filename string, annotations []Annotation) {
	<h2>Annotate Intel</h2>
	<br/>
    <div id="annotations">
        for _, annotation := range annotations {
            <div class="annotation">
                <strong>Keyword:</strong> { annotation.Keyword }<br/>
                <strong>Description:</strong> { annotation.Description }<br/>
                <strong>Content:</strong> { annotation.Content }<br/>
                <strong>Start Position:</strong> { annotation.Start }<br/>
                <strong>End Position:</strong> { annotation.End }<br/>
            </div>
        }
    </div>
	<div id="intel">
       
		for _, line := range content {
			<p>{ line }</p>
		}
      
	</div>
    

	<div id="annotate" popover style="padding: 2ch;">
		<form action="/annotation/add" method="post">
			<input type="hidden" name="filename" value={ filename }/>
            <input type="hidden" name="started_at" id="started_at" />
            <input type="hidden" name="ended_at" id="ended_at" />
            <input type="hidden" name="started_at_position" id="started_at_position" />
            <input type="hidden" name="ended_at_position" id="ended_at_position" />
        
			<label for="selected_text">Selected Text:</label>
			<br/>
			<textarea name="selected_text" id="selected_text" rows="6" cols="53" readonly required></textarea>
			<br/>
			<label for="annotation">Keyword*</label>
			<br/>
			<input type="text" name="annotation" id="annotation" required/>
			<br/>
			<label for="description">Description</label>
			<br/>
			<textarea name="description" id="description" rows="6" cols="53"></textarea>
			<br/>
			<button type="submit">Submit Annotation</button>
		</form>
		<button popovertarget="annotate" popovertargetaction="close">Close</button>
	</div>
	<script>
        window.intel.onmouseup = function() {
            const selection = window.getSelection();
            if (!selection.rangeCount) {
                return;
            }
            const range = selection.getRangeAt(0);
            const selectedText = range.toString();
            if (!selectedText.length) {
                return;
            }
            window.selected_text.value = selectedText;

            const startedAt = range.startContainer;
            window.started_at.value = startedAt.textContent.trim();
            
            const endedAt = range.endContainer;
            window.ended_at.value = endedAt.textContent.trim();

            const postionSelectionInContainerStart = range.startOffset;
            window.started_at_position.value = postionSelectionInContainerStart;

            const postionSelectionInContainerEnd = range.endOffset;
            window.ended_at_position.value = postionSelectionInContainerEnd;
         
            window.annotate.showPopover();
        };
    </script>
}
